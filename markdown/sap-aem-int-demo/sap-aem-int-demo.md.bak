author: HariRangarajan-Solace
summary: This codelab walks a developer thru the experience of using SAP AEM to event enable their SAP ecosystem and workflows
id: sap-aem-int-demo
tags: SAP, AEM, Event Portal, SAP BTP, CAPM
categories:
environments: Web
status: Hidden
feedback link: https://github.com/SolaceDev/solace-dev-codelabs/blob/master/markdown/sap-aem-int-demo

# SAP AEM Codelab

## What you'll learn: Overview

Duration: 0:05:00

Enter a codelab overview here: what & why and github repo link where you can find related code if applicable

### Info Boxes
Plain Text followed by green & yellow info boxes 

> aside negative
> This will appear in a yellow info box.

> aside positive
> This will appear in a green info box.

### Bullets
Plain Text followed by bullets
* Hello
* CodeLab
* World

### Numbered List
1. List
1. Using
1. Numbers

### Add an Image or a GIF

![Soly Image Caption](img/soly.gif)

## What you need: Prerequisites

Duration: 0:07:00

Enter environment setup & prerequisites here

### Add a Link
Add a link!
[Example of a Link](https://www.google.com)

### Embed an iframe

![https://codepen.io/tzoght/embed/yRNZaP](https://en.wikipedia.org/wiki/File:Example.jpg "Try Me Publisher")

## Day 1 - Setup Advanced Event Mesh
### Part 1 -  Event Mesh
### Part 2 -  SAP simulator

The SAP Cloud Application Programming Model (CAP) is a framework of languages, libraries, and tools for building enterprise-grade services and applications. It guides developers along a 'golden path' of proven best practices and a great wealth of out-of-the-box solutions to recurring tasks.
CAP-based projects benefit from a primary focus on domain. Instead of delving into overly technical disciplines, we focus on accelerated development and safeguarding investments in a world of rapidly changing cloud technologies.

For more information on SAP CAP, you can refer to the link : [SAP Cloud Application Programming Model](https://cap.cloud.sap/docs/)

To showcase the integration capability of SAP CAP and AEM, we have created a CAP based Java microservice which will publish different SAP business object events into your AEM instance.
This application can be deployed in your SAP CloudFoundry space.

#### Step 1 : CloudFoundry CLI installation
To start with, we will be installing the CloudFoundry CLI for the deployment process.
Follow the steps mentioned over here [Installing the cf CLI](https://github.com/cloudfoundry/cli/wiki/V8-CLI-Installation-Guide) for detailed instructions on this.

#### Step 2 : Downloading the deployables artefacts
Download the following files artefact files and save them in the same directory:
- capm-erp-simulation-exec.jar : [https://github.com/SolaceLabs/aem-sap-integration/blob/main/deployable/capm-erp-simulation-exec.jar](https://github.com/SolaceLabs/aem-sap-integration/blob/main/deployable/capm-erp-simulation-exec.jar)
- manifest.yml : [https://github.com/SolaceLabs/aem-sap-integration/blob/main/deployable/manifest.yml](https://github.com/SolaceLabs/aem-sap-integration/blob/main/deployable/manifest.yml)

#### Step 3 : Login to CloudFoundry space
You can log in to the SAP CloudFoundry space in your account as below :

- Use the command : `cf login` to log in, which will prompt for your SAP login credentials.
- Once authenticated, the details of the default cloudfoundry space will be displayed.

#### Step 4 : Deploying the SAP Simulator application
- Navigate to the directory where the above deployable artefact files are saved.
- Run the command `cf push` which will upload the jar file and use the manifest.yml for properties. **Note : this command will take some time to completely execute as it uploads the jar deployable and also start the application.**
- Once the command is completely executed, run the command `cf apps` to view a listing of the apps in your cloudfoundry space
- Verify that the app **capm-erp-simulation** is deployed and started

#### Step 5 : Accessing the SAP Simulator application
- Navigate to the Cloud Foundry environment in your SAP BTP Cockpit
- You should see a screen like below :
  ![Cloud Foundry Space](img/cf_space.png)
- Click on the application name : **capm-erp-simulation** and enter the application overview screen.
  ![capm-erp-simulation-Overview](img/capm-erp-simulator-overview.png)
- Click on the application route as highlighted below. Note : this route url will differ from for different SAP BTP accounts.
![capm-erp-simulation-Overview](img/capm-erp-simulator-overview-highlighted.png)

#### Step 6 : Connecting to SAP AEM and running the simulator
- As you click on the above application route url, you will be redirected to the simulator screen as below
![Simulator connection screen](img/simulator-connection-screen.png)
Here you can connect to your SAP AEM instance to publish events.
- The connection parameters for the simulator can be captured from below :
  ![Broker console connect screen](img/brokerconsole_connect.png)
  ![Console-Connect - Java Spring](img/brokerconsole_connect_creds_java.png)
  Enter the appropriate value as specified below :
- Host URL : Public Endpoint
- VPN Name : Message VPN
- Username : Username
- Password : Password
  ![Console-Connect - Creds highlighted](img/brokerconsole_connect_creds_java_highlighted.png)
- Once the broker is successfully connected, you will be displayed a screen as below :
  ![Simulator connected screen](img/simulator-connected-screen.png)
- You can choose which events to simulate and its frequency by using the sliders. As you change a schedule, the submit button in the bottom will be enabled
  ![Simulator scheduling](img/simulator-scheduling.png)
- In case you want to disable any of the events, then pull the slider to **0** and click submit and the event will be disabled immediately
  ![Simulator disabling](img/simulator-disabling.png)


## Day 2 - Event portal content and UI5 Cards
### Part -1 - Event Portal Setup
### Part -2 - Access UI5 Samples
## Day 3 - Deploy SAP BPA Processes
## Day 4 - Event Enabled Integration flows
### Step 1 - Download and import the template integration flows
- Download [AEMBusinessPartnerAddressCheck.zip](artifacts/cloud-integration-flows/AEMBusinessPartnerAddressCheck.zip), [AEMLegacyOutputAdapter.zip](artifacts/cloud-integration-flows/AEMLegacyOutputAdapter.zip) & [AEMSalesOrderNotification.zip](artifacts/cloud-integration-flows/AEMSalesOrderNotification.zip)
- Import AEMBusinessPartnerAddressCheck.zip, AEMLegacyOutputAdapter.zip & AEMSalesOrderNotification.zip into your Integration Suite tenant

### Step 2a - Setup/configure SAP AEM
Create input queues for your integration flows:
[Go to Cluster Manager -> <your service> -> Manage -> Queues - to open the Broker UI]
1. For AEMBusinessPartnerAddressCheck:
	* CIBusinessPartnerChecker
	![queue settings](img/CIBusinessPartnerChecker-queue-settings.png)
	![queue settings pt2](img/CIBusinessPartnerChecker-queue-settings-pt2.png)
		*Add the following subscriptions to the queue
		![queue subscriptions](img/CIBusinessPartnerChecker-queue-subs.png)
		
	* CIBusinessPartnerCheckerDMQ
	![queue settings](img/CIBusinessPartnerCheckerDMQ-queue-settings.png)
	* CIBusinessPartnerChecked (optional)
	![queue settings](img/CIBusinessPartnerChecked-queue-settings.png) 
		*Add the following subscriptions to the queue
		![queue subscriptions](img/CIBusinessPartnerChecked-queue-subs.png)
	* CIBusinessPartnerInvalid (optional)
	![queue settings](img/CIBusinessPartnerCheckedInvalid-queue-settings.png) 
		*Add the following subscriptions to the queue
		![queue subscriptions](img/CIBusinessPartnerCheckedInvalid-queue-subs.png) 

2. For AEMSalesOrderNotification
	* CISalesOrderNotification
	![queue settings](img/CISalesOrderNotification-queue-settings.png)
	![queue settings pt2](img/CISalesOrderNotification-queue-settings-pt2.png)
		*Add the following subscriptions to the queue
		![queue subscriptions](img/CISalesOrderNotification-queue-subs.png) 
		
	* CISalesOrderNotificationProcessed (optional)
	![queue settings](img/CISalesOrderNotificationProcessed-queue-settings.png) 
		*Add the following subscriptions to the queue
		![queue subscriptions](img/CISalesOrderNotificationProcessed-queue-subs.png)  
	
3. For AEMLegacyOutputAdapter
	* CILegacyAdapterIn
	![queue settings](img/CILegacyAdapterIn-queue-settings.png)
	![queue settings pt2](img/CILegacyAdapterIn-queue-settings-pt2.png)
		*Add the following subscriptions to the queue
		![queue subscriptions](img/CILegacyAdapterIn-queue-subs.png) 
		
	* CILegacyAdapterInDMQ

### Step 2b - Setup/configure dependency services
1. For AEMBusinessPartnerAddressCheck
	* Activate SAP's Data Quality Management Service (DQM) by following this [blog](https://blogs.sap.com/2022/02/15/getting-started-with-sap-data-quality-management-microservices-for-location-data-btp-free-tier/)
2. For AEMSalesOrderNotification
	* You'll need an external email service to be able to automatically send emails, details like smtp server address, username (email) and password.
3. For AEMLegacyOutputAdapter
	> The legacy output adapter is simulating appending events to a file via an SFTP adapter, which could be imported to a legacy system. The actual flow doesn't require a working sftp destination as it's just being used to simulate a failure to demonstrate the retry and error handling capabilities of AEM. The flow will try a few times to deliver each event to the SFTP destination. After 3 failed attempts messages will be moved to a Dead Message Queue for manual processing by a UI5 and Business Process Automation workflow.
	
	> If, after successful demonstration of the error handling, you would still like to see a successful delivery of events to a file via sftp, you will need an sftp server and sftp credentials to configure the flow with a valid endpoint (sftp server address and username password) and import the ssh identidy into .

### Step 3 - Configure your integration flows

### Step 4 - Deploy your integration flows


## Day 5 - Event Enabled SAP objects

## Takeaways

Duration: 0:07:00

✅ < Fill IN TAKEAWAY 1>   
✅ < Fill IN TAKEAWAY 2>   
✅ < Fill IN TAKEAWAY 3>   

![Soly Image Caption](img/soly.gif)

Thanks for participating in this codelab! Let us know what you thought in the [Solace Community Forum](https://solace.community/)! If you found any issues along the way we'd appreciate it if you'd raise them by clicking the Report a mistake button at the bottom left of this codelab.
